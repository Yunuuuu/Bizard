---
title: "3D Pie"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `3D Pie` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/pie-3d?lang=en>
:::

The 3D pie chart is a pie chart that has a 3D appearance.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `plotrix`; `ggplotify`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("plotrix", quietly = TRUE)) {
  install.packages("plotrix")
}
if (!requireNamespace("ggplotify", quietly = TRUE)) {
  install.packages("ggplotify")
}

# Load packages
library(data.table)
library(jsonlite)
library(plotrix)
library(ggplotify)
```

## Data Preparation

The loaded data are different groups and their data.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/pie-3d/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# Convert data structure
colnames(data) <- c("Group", "Value")
data$Value <- as.numeric(data$Value)
data <- data[data$Value != 0,]

# View data
head(data)
```

## Visualization

```{r fig-1pie-3d}
#| label: fig-1pie-3d
#| fig-cap: "3D Pie"
#| out.width: "95%"
#| fig-height: 6
#| fig-width: 6.5
#| warning: false
#| error: false
#| message: false

# 3D Pie
pie3D(data$Value, radius = 0.8, height = 0.05, theta = 0.8,
      labels = paste(data$Group, "\n(n=", data$Value, ", ",
                     round(data$Value / sum(data$Value) * 100, 2), "%)",
                     sep = ""),
      explode = 0.1, main = "", labelcex = 1, shade = 0.4, labelcol = "black",
      col = c("#E64B35FF","#4DBBD5FF","#00A087FF","#3C5488FF"))
```

The figure shows more aesthetically the number of samples in groups 1 to 4 and the proportion corresponding to the number of samples in the 3D form. The number of samples in one group is 13, accounting for 11.71%; the number of samples in two groups is 34, accounting for 30.63%; the number of samples in three groups is 21, accounting for 18.92%; and the number of samples in four groups is 43, accounting for 38.74%.



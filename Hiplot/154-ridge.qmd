---
title: "Ridge"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Ridge` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/ridge?lang=en>
:::

The ridge map is a graph that connects points and forms a ridge.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `ggridges`; `ggplot2`; `ggthemes`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("ggridges", quietly = TRUE)) {
  install.packages("ggridges")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}
if (!requireNamespace("ggthemes", quietly = TRUE)) {
  install.packages("ggthemes")
}

# Load packages
library(data.table)
library(jsonlite)
library(ggridges)
library(ggplot2)
library(ggthemes)
```

## Data Preparation

The loaded data are three groups and their corresponding values.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/ridge/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# Convert data structure
data$group <- factor(data$group, levels = unique(data$group)[length(unique(data$group)):1])

# View data
head(data)
```

## Visualization

```{r fig-1ridge}
#| label: fig-1ridge
#| fig-cap: "Ridge"
#| out.width: "95%"
#| fig-height: 4
#| fig-width: 8
#| warning: false
#| error: false
#| message: false

# Ridge
p <- ggplot(data, aes(x = value, y = group, fill = group, col = group)) +
  geom_density_ridges(scale = 5, alpha = 0.8) +
  labs(x = "value", y = "group") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none") +
  ggtitle("Ridge Plot") +
  guides(color = guide_legend(reverse = TRUE),
         fill = guide_legend(reverse = TRUE)) +
  scale_fill_manual(values = c("#e04d39","#5bbad6","#1e9f86")) +
  scale_color_manual(values = c("#e04d39","#5bbad6","#1e9f86")) +
  theme_stata() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))

p
```

Different colors represent different groups, and the approximate degree of data can be observed.




---
title: "Pie Group"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Pie Group` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/pie-group?lang=en>
:::

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `patchwork`; `ggplotify`; `cowplot`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("patchwork", quietly = TRUE)) {
  install.packages("patchwork")
}
if (!requireNamespace("ggplotify", quietly = TRUE)) {
  install.packages("ggplotify")
}
if (!requireNamespace("cowplot", quietly = TRUE)) {
  install.packages("cowplot")
}

# Load packages
library(data.table)
library(jsonlite)
library(patchwork)
library(ggplotify)
library(cowplot)
```

## Data Preparation

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/pie-group/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# Convert data structure
data[,"genre"] <- factor(data[,"genre"], levels = unique(data[,"genre"]))
data[,"mpaa"] <- factor(data[,"mpaa"], levels = unique(data[,"mpaa"]))

# View data
head(data)
```

## Visualization

```{r fig-1pie-group}
#| label: fig-1pie-group
#| fig-cap: "Pie Group"
#| out.width: "95%"
#| fig-height: 16
#| fig-width: 16
#| warning: false
#| error: false
#| message: false

# Pie Group
col <- c("#E64B35FF","#4DBBD5FF","#00A087FF","#3C5488FF","#F39B7FFF","#8491B4FF",
         "#91D1C2FF","#DC0000FF","#7E6148FF","#B09C85FF")
plist <- list()
for (i in 1:length(unique(data[,"mpaa"]))) {
  data_tmp <- data[data[,"mpaa"] == unique(data[,"mpaa"])[i],]
  x <- table(data_tmp[,"genre"])
  ptmp <- as.ggplot(function(){
    par(oma=c(0,0,0,0))
    pie(x,
      labels = sprintf("%s\n(n=%s, %s%%)", names(x), x,
        round(x / sum(x) * 100, 0)),
      col = col,
      main = paste0("mpaa", ":", unique(data[,"mpaa"])[i]),
      edges = 200,
      radius = 0.8,
      clockwise = F
    )
  })
  plist[[i]] <- ptmp
}

plot_grid(plotlist = plist, ncol = 2)
```




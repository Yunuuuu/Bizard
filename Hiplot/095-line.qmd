---
title: "Line"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Line` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/line?lang=en>
:::

The line chart is a statistical chart that USES a linear or logarithmic scale to draw data in a two - or three-dimensional view to show the data set or track the characteristics of the data over time.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `ggplot2`; `ggthemes`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}
if (!requireNamespace("ggthemes", quietly = TRUE)) {
  install.packages("ggthemes")
}

# Load packages
library(ggplot2)
library(ggthemes)
```

## Data Preparation

The loaded data are the horizontal axis values and their corresponding vertical axis values and groups.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- read.delim("files/Hiplot/095-line-data.txt", header = T)

# Convert data structure
data[,3] <- factor(data[,3], levels = unique(data[,3]))

# View data
head(data)
```

## Visualization

```{r fig-1line}
#| label: fig-1line
#| fig-cap: "Line"
#| out.width: "95%"
#| fig-height: 4
#| fig-width: 6
#| warning: false
#| error: false
#| message: false

# Line
p <- ggplot(data, aes(x = Value1, y = Value2)) +
  geom_line(alpha = 1, aes(color = Group, linetype = Group)) +
  geom_point(aes(color = Group, shape = Group)) +
  ggtitle("Line Regression Plot") +
  scale_fill_manual(values = c("#e04d39","#5bbad6")) +
  theme_stata() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))

p
```

The diagram shows that value1 is positively correlated with Value2 in treatment plan 1, while Value1 is negatively correlated with Value2 in treatment plan 2.



---
title: "Corrplot"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Corrplot` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/corrplot?lang=en>
:::

The correlation heat map is a graph that analyzes the correlation between two or more variables.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `corrplot`; `ggcorrplot`; `ggplotify` 

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("corrplot", quietly = TRUE)) {
  install.packages("corrplot")
}
if (!requireNamespace("ggcorrplot", quietly = TRUE)) {
  install.packages("ggcorrplot")
}
if (!requireNamespace("ggplotify", quietly = TRUE)) {
  install.packages("ggplotify")
}

# Load packages
library(data.table)
library(jsonlite)
library(corrplot)
library(ggcorrplot)
library(ggplotify)
```

## Data Preparation

The loaded data are the gene names and the expression of each sample.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/corrplot/data.json")$exampleData[[1]]$textarea[[1]])
data <- as.data.frame(data)

# convert data structure
data <- data[!is.na(data[, 1]), ]
idx <- duplicated(data[, 1])
data[idx, 1] <- paste0(data[idx, 1], "--dup-", cumsum(idx)[idx])
rownames(data) <- data[, 1]
data <- data[, -1]
str2num_df <- function(x) {
  final <- NULL
  for (i in seq_len(ncol(x))) {
    final <- cbind(final, as.numeric(x[, i]))
  }
  colnames(final) <- colnames(x)
  return(final)
}
tmp <- str2num_df(t(data))
corr <- round(cor(tmp, use = "na.or.complete", method = "pearson"), 3)
p_mat <- round(cor_pmat(tmp, method = "pearson"), 3)

# View data
head(data)
```

## Visualization

```{r fig-1Corrplot}
#| label: fig-1Corrplot
#| fig-cap: "Corrplot"
#| out.width: "95%"
#| fig-height: 9
#| fig-width: 9
#| warning: false
#| message: false

# Corrplot
p <- as.ggplot(function(){
  corrplot(
    corr, 
    method = "circle", 
    type = "upper",
    tl.col = "black", 
    diag = F,
    col = colorRampPalette(c("#4477AA", "#FFFFFF", "#BB4444"))(200),
    order = "hclust",
    hclust.method = "ward.D2")
  }) +
  xlab("") + ylab("") +
  ggtitle("Cor Heatmap Plot") +
  theme_void() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_blank(), axis.text.y = element_blank(),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))
p
```

Red indicates positive correlation between two genes, blue indicates negative correlation between two genes, and the number in each cell indicates correlation coefficient.


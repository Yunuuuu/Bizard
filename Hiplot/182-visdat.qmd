---
title: "Visdat"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Visdat` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/visdat?lang=en>
:::

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `visdat`; `ggplot2`; `dplyr`; `patchwork`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("visdat", quietly = TRUE)) {
  install.packages("visdat")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}
if (!requireNamespace("dplyr", quietly = TRUE)) {
  install.packages("dplyr")
}
if (!requireNamespace("patchwork", quietly = TRUE)) {
  install.packages("patchwork")
}

# Load packages
library(data.table)
library(jsonlite)
library(visdat)
library(ggplot2)
library(dplyr)
library(patchwork)
```

## Data Preparation

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/visdat/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# View data
head(data)
```

## Visualization

```{r fig-1visdat}
#| label: fig-1visdat
#| fig-cap: "Visdat"
#| out.width: "95%"
#| fig-height: 10
#| fig-width: 10
#| warning: false
#| error: false
#| message: false

# Visdat
add_palette <- function (p) {
  ## add color palette
  p <- p + scale_fill_manual(values = c("#3B4992FF", "#EE0000FF"))
}
pobj <- list()
pobj[["p1"]] <- add_palette(vis_dat(data)) + ggtitle(':vis_dat')
pobj[["p2"]] <- add_palette(vis_guess(data)) + ggtitle(':vis_guess')
pobj[["p3"]] <- vis_miss(data, cluster = T, sort_miss = T) + ggtitle(':vis_miss')
pobj[["p4"]] <- add_palette(vis_expect(data, ~.x >= 20 )) + ggtitle(':vis_expect')
pobj[["p5"]] <- vis_cor(data) + 
  scale_fill_gradientn(colours = c("#0571B0", "#92C5DE", "#F4A582", "#CA0020")) +
  ggtitle(':vis_cor')
pobj[["p6"]] <- data %>%
      select_if(is.numeric) %>%
      vis_value() + ggtitle(':vis_value')
pobj[["p6"]] <- pobj[["p6"]] + 
  scale_fill_gradientn(colours = c("#0571B0","#92C5DE","#F7F7F7","#F4A582",
                                   "#CA0020"))

pstr <- paste0(sprintf("pobj[[%s]]", 1:length(pobj)), collapse = " + ")
p <- eval(parse(text = 
  sprintf("%s + plot_layout(ncol = 2) +
plot_annotation(tag_levels = 'A')", pstr)))

p
```




---
title: "Parliament"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Parliament` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/parliament?lang=en>
:::

The parliamentary chart is a data processing method that looks like a parliamentary seat, with points representing a data set to show the share ratio of each group more flexibly.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `ggpol`; `ggplot2`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("ggpol", quietly = TRUE)) {
  install.packages("ggpol")
}
if (!requireNamespace("ggplot2", quietly = TRUE)) {
  install.packages("ggplot2")
}

# Load packages
library(data.table)
library(jsonlite)
library(ggpol)
library(ggplot2)
```

## Data Preparation

The loaded data are groups and their corresponding values.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/parliament/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# View data
head(data)
```

## Visualization

```{r fig-1parliament}
#| label: fig-1parliament
#| fig-cap: "Parliament"
#| out.width: "95%"
#| fig-height: 4
#| fig-width: 6
#| warning: false
#| error: false
#| message: false

# Parliament
p <- ggplot(data) +
  geom_parliament(alpha = 1, aes(seats = value, fill = group), color = "black") +
  coord_fixed() +
  scale_fill_discrete(name = "group", labels = unique(data$group)) +
  scale_fill_manual(values = c("#E64B35FF","#4DBBD5FF","#00A087FF","#3C5488FF",
                                "#F39B7FFF")) +
  ggtitle("Parliament Plot") +
  theme_void() +
  theme(legend.position = "bottom",
        plot.title = element_text(hjust = 0.5))

p
```

Different colors represent different groups, and each dot represents one data point. It's a semicircle of points, the smallest fraction of which can be represented by a single point in a parliamentary diagram.



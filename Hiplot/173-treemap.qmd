---
title: "Treemap"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Treemap` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/treemap?lang=en>
:::

Tree map is a kind of tree structure diagram that graphical form to represent hierarchy structure.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `treemap`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("treemap", quietly = TRUE)) {
  install.packages("treemap")
}

# Load packages
library(data.table)
library(jsonlite)
library(treemap)
```

## Data Preparation

The loaded data are different groups and their data.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/treemap/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# View data
head(data)
```

## Visualization

```{r fig-1treemap}
#| label: fig-1treemap
#| fig-cap: "Treemap"
#| out.width: "95%"
#| fig-height: 3
#| fig-width: 6
#| warning: false
#| error: false
#| message: false

# Treemap
p <- treemap(data, index = colnames(data)[1], vSize = colnames(data)[2],
             vColor = colnames(data)[1], type = "index", title = "", 
             algorithm = "pivotSize", sortID = colnames(data)[1], border.lwds = 1,
             fontcolor.labels = "#000000", inflate.labels = F, overlap.labels = 0.5,
             fontfamily.title = "Arial", fontfamily.legend = "Arial",
             fontfamily.labels = "Arial", 
             palette = c("#E64B35FF","#4DBBD5FF","#00A087FF","#3C5488FF",
                         "#F39B7FFF"), 
             aspRatio = 6 / 6)

p
```

Different colors represent different groups and different areas represent data and proportion.



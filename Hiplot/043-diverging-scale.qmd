---
title: "Diverging Scale"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Diverging Scale` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/diverging-scale?lang=en>
:::

The diverging scale is a graph that maps a continuous, quantitative input to a continuous fixed interpolator.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `ggcharts`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("ggcharts", quietly = TRUE)) {
  install.packages("ggcharts")
}

# Load packages
library(data.table)
library(jsonlite)
library(ggcharts)
```

## Data Preparation

The first column is a list of model names, and the remaining columns enter the relevant indicators and corresponding values.

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/diverging-scale/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# convert data structure
data <- dplyr::transmute(.data = data, x = model, y = scale(hp))

# View data
head(data)
```

## Visualization

### 1.Barplot

```{r fig-1barplot}
#| label: fig-1barplot
#| fig-cap: "Diverging Scale Barplot"
#| out.width: "95%"
#| fig-height: 3.5
#| fig-width: 4
#| warning: false
#| message: false

# Diverging Scale Barplot
fill_colors <- c("#C20B01", "#196ABD")
fill_colors <- fill_colors[c(any(data[, "y"] > 0), any(data[, "y"] < 0))]
p <- diverging_bar_chart(data = data, x = x, y = y, bar_colors = fill_colors,
                         text_color = '#000000') + 
  theme(axis.text.x = element_text(color = "#000000"),
        axis.title.x = element_text(colour = "#000000"),
        axis.title.y = element_text(colour = "#000000"),
        plot.background = element_blank()) + 
  labs(x = "model", y = "scale(hp)", title = "")

p
```

Hp data is shown on the horizontal axis, model names (classification) are shown on the vertical axis, models above average are shown in red, and models below average are shown in blue. Data is assigned on a scale of 2 by size.

### 2.Lollipop Plot

```{r fig-2lollipop}
#| label: fig-2lollipop
#| fig-cap: "Diverging Scale Lollipop Plot"
#| out.width: "95%"
#| fig-height: 3.5
#| fig-width: 4
#| warning: false
#| message: false

# Diverging Scale Lollipop Plot
fill_colors <- c("#C20B01", "#196ABD")
fill_colors <- fill_colors[c(any(data[, "y"] > 0), any(data[, "y"] < 0))]
p <- diverging_lollipop_chart(
  data = data, x = x, y = y, lollipop_colors = fill_colors,
  line_size = 0.3, point_size = 1.9, text_color = '#000000') + 
  theme(axis.text.x = element_text(color = "#000000"),
        axis.title.x = element_text(colour = "#000000"),
        axis.title.y = element_text(colour = "#000000"),
        plot.background = element_blank()) + 
  labs(x = "model", y = "scale(hp)", title = "")

p
```


---
title: "Violin Group"
author:
  - "**[Editor]** [Hu Zheng](https://github.com/ZhengTiger);"
  - "**[Contributors]** "
---

::: callout-note
**Hiplot website**

This page is the tutorial for source code version of the Hiplot `Violin Group` plugin. You can also use the Hiplot website to achieve no code ploting. For more information please see the following link:

<https://hiplot.cn/basic/violin-group?lang=en>
:::

Violin and box plot of grouped data with T-test.

## Setup

-   System Requirements: Cross-platform (Linux/MacOS/Windows)

-   Programming language: R

-   Dependent packages: `data.table`; `jsonlite`; `ggpubr`; `ggthemes`

```{r packages setup, message=FALSE, warning=FALSE, output=FALSE}
# Install packages
if (!requireNamespace("data.table", quietly = TRUE)) {
  install.packages("data.table")
}
if (!requireNamespace("jsonlite", quietly = TRUE)) {
  install.packages("jsonlite")
}
if (!requireNamespace("ggpubr", quietly = TRUE)) {
  install.packages("ggpubr")
}
if (!requireNamespace("ggthemes", quietly = TRUE)) {
  install.packages("ggthemes")
}

# Load packages
library(data.table)
library(jsonlite)
library(ggpubr)
library(ggthemes)
```

## Data Preparation

- <1st-col>: (Numeric) value data
- <2nd-col>: (String) 1st-rank groups
- <3rd-col>: (String) 2nd-rank groups

```{r load data, message=FALSE, warning=FALSE}
# Load data
data <- data.table::fread(jsonlite::read_json("https://hiplot.cn/ui/basic/violin-group/data.json")$exampleData$textarea[[1]])
data <- as.data.frame(data)

# convert data structure
data[, 3] <- factor(data[, 3], levels = unique(data[, 3]))

# View data
head(data)
```

## Visualization

```{r fig-1violin-group}
#| label: fig-1violin-group
#| fig-cap: "Violin Group"
#| out.width: "95%"
#| fig-height: 6
#| fig-width: 8
#| warning: false
#| error: false
#| message: false

# Violin Group
p <- ggviolin(data, x = "Group1", y = "Value", color = "Group2", add = "dotplot",
              add.params = list(fill = "white",size = 1), title = "Violin Diagram",
              xlab = "Group1", ylab = "Value", fill = "Group2",
              palette = c("#374E55FF", "#DF8F44FF"), alpha = 0.5, trim = F) +
  stat_compare_means(aes(group = data[, colnames(data)[3]]),
    method = "t.test", vjust = -6, label.x.npc = "left", label.y.npc = "top",
    tip.length = 0.03, bracket.size = 0.3, step.increase = 0, position = "identity",
    na.rm = FALSE, show.legend = NA, inherit.aes = TRUE, geom = "text") +
  theme_stata() +
  theme(text = element_text(family = "Arial"),
        plot.title = element_text(size = 12,hjust = 0.5),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10),
        axis.text.x = element_text(angle = 0, hjust = 0.5,vjust = 1),
        legend.position = "right",
        legend.direction = "vertical",
        legend.title = element_text(size = 10),
        legend.text = element_text(size = 10))

p
```



